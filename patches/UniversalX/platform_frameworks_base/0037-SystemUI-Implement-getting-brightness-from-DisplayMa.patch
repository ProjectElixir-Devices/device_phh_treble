From 85972b07d55908a18027012398a979d0a0eeca28 Mon Sep 17 00:00:00 2001
From: KrutosVIP <52695559+KrutosVIP@users.noreply.github.com>
Date: Thu, 16 Feb 2023 15:09:42 +0000
Subject: [PATCH 37/37] SystemUI: Implement getting brightness from
 DisplayManager instead of reading values directly from sysfs

---
 ...nt-getting-brightness-from-DisplayMa.patch | 58 +++++++++++++++++++
 .../android/systemui/biometrics/UdfpsView.kt  | 23 +++++---
 2 files changed, 72 insertions(+), 9 deletions(-)
 create mode 100644 0001-SystemUI-Implement-getting-brightness-from-DisplayMa.patch

diff --git a/0001-SystemUI-Implement-getting-brightness-from-DisplayMa.patch b/0001-SystemUI-Implement-getting-brightness-from-DisplayMa.patch
new file mode 100644
index 00000000..be123349
--- /dev/null
+++ b/0001-SystemUI-Implement-getting-brightness-from-DisplayMa.patch
@@ -0,0 +1,58 @@
+From 2572cf3ca55652487232a3a2b3babb0dfa23b8b7 Mon Sep 17 00:00:00 2001
+From: KrutosVIP <52695559+KrutosVIP@users.noreply.github.com>
+Date: Thu, 16 Feb 2023 15:09:42 +0000
+Subject: [PATCH] SystemUI: Implement getting brightness from DisplayManager
+ instead of reading values directly from sysfs
+
+---
+ .../android/systemui/biometrics/UdfpsView.kt  | 23 +++++++++++--------
+ 1 file changed, 14 insertions(+), 9 deletions(-)
+
+diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
+index d2e98c181260..134454c2c600 100644
+--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
++++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
+@@ -34,6 +34,8 @@ import com.android.systemui.R
+ import com.android.systemui.doze.DozeReceiver
+ import java.io.File
+ 
++import android.hardware.display.DisplayManager
++
+ import vendor.goodix.hardware.biometrics.fingerprint.V2_1.IGoodixFingerprintDaemon
+ 
+ private const val TAG = "UdfpsView"
+@@ -221,19 +223,22 @@ Log.d("PHH", "Surface destroyed!")
+ 
+         mySurfaceView.setVisibility(VISIBLE)
+         Log.d("PHH", "setting surface visible!")
+-
+-        val brightnessFile = File("/sys/class/backlight/panel/brightness")
+-        val maxBrightnessFile = File("/sys/class/backlight/panel/max_brightness")
+         
+         var brightness: Double = 0.0
+         var maxBrightness: Double = 0.0
+         
+-        if (brightnessFile.exists() && maxBrightnessFile.exists()) {
+-            brightness = brightnessFile.readText().toDouble()
+-            maxBrightness = maxBrightnessFile.readText().toDouble()
+-        } else {
+-            brightness = File("/sys/class/backlight/panel0-backlight/brightness").readText().toDouble()
+-            maxBrightness = File("/sys/class/backlight/panel0-backlight/max_brightness").readText().toDouble()
++        var dm: DisplayManager = context.getSystemService(Context.DISPLAY_SERVICE) as DisplayManager
++        Log.d("PHH", "getting primary display brightness!")
++
++        // DisplayManager can be uninitialized properly on early init for example, and so we can get
++        // broken code.
++        if (dm != null) {
++            var brightnessInfo = dm.getDisplay(0).getBrightnessInfo()
++            // Same for brightness of course.
++	    if (brightnessInfo != null) {
++                maxBrightness = brightnessInfo.brightnessMaximum.toDouble()
++                brightness = brightnessInfo.brightness.toDouble()
++            }
+         }
+ 
+         // Assume HBM is max brightness
+-- 
+2.37.2
+
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
index 81603c1f..1d148a8c 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
@@ -36,6 +36,8 @@ import com.android.systemui.R
 import com.android.systemui.doze.DozeReceiver
 import java.io.File
 
+import android.hardware.display.DisplayManager
+
 import vendor.goodix.hardware.biometrics.fingerprint.V2_1.IGoodixFingerprintDaemon
 
 private const val TAG = "UdfpsView"
@@ -247,18 +249,21 @@ Log.d("PHH", "Surface destroyed!")
         mySurfaceView.setVisibility(VISIBLE)
         Log.d("PHH", "setting surface visible!")
 
-        val brightnessFile = File("/sys/class/backlight/panel/brightness")
-        val maxBrightnessFile = File("/sys/class/backlight/panel/max_brightness")
-
         var brightness: Double = 0.0
         var maxBrightness: Double = 0.0
 
-        if (brightnessFile.exists() && maxBrightnessFile.exists()) {
-            brightness = brightnessFile.readText().toDouble()
-            maxBrightness = maxBrightnessFile.readText().toDouble()
-        } else {
-            brightness = File("/sys/class/backlight/panel0-backlight/brightness").readText().toDouble()
-            maxBrightness = File("/sys/class/backlight/panel0-backlight/max_brightness").readText().toDouble()
+        var dm: DisplayManager = context.getSystemService(Context.DISPLAY_SERVICE) as DisplayManager
+        Log.d("PHH", "getting primary display brightness!")
+
+        // DisplayManager can be uninitialized properly on early init for example, and so we can get
+        // broken code.
+        if (dm != null) {
+            var brightnessInfo = dm.getDisplay(0).getBrightnessInfo()
+            // Same for brightness of course.
+	    if (brightnessInfo != null) {
+                maxBrightness = brightnessInfo.brightnessMaximum.toDouble()
+                brightness = brightnessInfo.brightness.toDouble()
+            }
         }
 
         // Assume HBM is max brightness
-- 
2.40.0

