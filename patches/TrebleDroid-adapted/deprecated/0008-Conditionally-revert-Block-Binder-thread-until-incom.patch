From b5a5db4999ac051a8849828dae93030416f7c239 Mon Sep 17 00:00:00 2001
From: ExactExampl <exactxmpl@pixelexperience.org>
Date: Sat, 31 Dec 2022 01:02:05 +0100
Subject: [PATCH] Conditionally revert "Block Binder thread until incoming call
 process completes"

---
 .../imsphone/ImsPhoneCallTracker.java         |   11 +
 1 file changed, 11 insertions(+)

diff --git a/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java b/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
index 948eb8e..166905f 100644
--- a/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
+++ b/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
@@ -320,8 +320,19 @@ public class ImsPhoneCallTracker extends CallTracker implements ImsPullCall {
 
         @Override
         public void onIncomingCall(IImsCallSession c, Bundle extras) {
+            final boolean shouldBlockBinderThreadOnIncomingCalls = SystemProperties.getBoolean(
+                    "ro.telephony.block_binder_thread_on_incoming_calls", true);
+            if (shouldBlockBinderThreadOnIncomingCalls) {
+                // we want to ensure we block this binder thread until incoming call setup completes
+                // as to avoid race conditions where the ImsService tries to update the state of the
+                // call before the listeners have been attached.
+                executeAndWait(()-> processIncomingCall(c, extras));
+            } else {
+                // for legacy IMS we want to avoid blocking the binder thread, otherwise
+                // we end up with half dead incoming calls with unattached call session
             TelephonyUtils.runWithCleanCallingIdentity(()-> processIncomingCall(c, extras),
                     mExecutor);
+            }
         }
 
         @Override
-- 
2.34.1

